import { LayoutDashboard, ShoppingCart, Box, Users, FolderOpen, Megaphone, Tag, Mail, Settings, HelpCircle } from "lucide-react";
import { cn } from "@/lib/utils";
import { useState, useEffect } from "react";
import { MenuItems } from "./sidebar/MenuItems";
import { BetaPrompt } from "./sidebar/BetaPrompt";
import { CollapseButton } from "./sidebar/CollapseButton";

const SIDEBAR_STATE_KEY = "sidebar-collapsed-state";

const menuItems = [{
  icon: () => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path fillRule="evenodd" clipRule="evenodd" d="M7.802 10H5.198C3.984 10 3 9.016 3 7.802V5.198C3 3.984 3.984 3 5.198 3H7.802C9.016 3 10 3.984 10 5.198V7.802C10 9.016 9.016 10 7.802 10Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
      <path fillRule="evenodd" clipRule="evenodd" d="M18.802 21H16.198C14.984 21 14 20.016 14 18.802V16.198C14 14.984 14.984 14 16.198 14H18.802C20.016 14 21 14.984 21 16.198V18.802C21 20.016 20.016 21 18.802 21Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
      <path fillRule="evenodd" clipRule="evenodd" d="M6.5 14C8.433 14 10 15.567 10 17.5C10 19.433 8.433 21 6.5 21C4.567 21 3 19.433 3 17.5C3 15.567 4.567 14 6.5 14Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
      <path fillRule="evenodd" clipRule="evenodd" d="M14.9607 9.26405H20.2427C20.6607 9.26405 20.9997 8.92605 20.9997 8.50805C20.9997 8.37505 20.9657 8.24505 20.8997 8.13005L18.2607 3.51705C18.0527 3.15505 17.5907 3.02905 17.2277 3.23705C17.1107 3.30405 17.0137 3.40005 16.9467 3.51705L14.3037 8.13005C14.0957 8.49305 14.2207 8.95505 14.5837 9.16405C14.6977 9.22905 14.8287 9.26405 14.9607 9.26405Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  ),
  label: "Dashboard",
  path: "/"
}, {
  icon: () => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M3 3H4.99656L7.64988 14.2321C7.90674 15.318 8.92351 16.0497 10.0347 15.9465L16.972 15.3034C17.9761 15.21 18.8246 14.5192 19.1184 13.554L20.9505 7.54966C21.1704 6.83257 20.6294 6.1077 19.8793 6.11451L5.82943 6.22835M15.006 10.7912H11.8652M8.83396 20.1984V20.3165M18.0449 20.1984V20.3165M9.31273 20.2238C9.31273 20.4897 9.09696 20.7053 8.83102 20.7053C8.56508 20.7053 8.34961 20.4897 8.34961 20.2238C8.34961 19.9578 8.56508 19.7422 8.83102 19.7422C9.09696 19.7422 9.31273 19.9578 9.31273 20.2238ZM18.5237 20.2238C18.5237 20.4897 18.3079 20.7053 18.042 20.7053C17.776 20.7053 17.5605 20.4897 17.5605 20.2238C17.5605 19.9578 17.776 19.7422 18.042 19.7422C18.3079 19.7422 18.5237 19.9578 18.5237 20.2238Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  ),
  label: "Orders",
  path: "/orders"
}, {
  icon: () => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M19.8889 7.46484L12.1168 11.9609L4.3457 7.46484M12.1153 20.9998V11.9541M15.6881 5.0459L7.91601 9.54198V12.2818M4 8.7118V15.2696C4 16.1385 4.46411 16.9421 5.21621 17.3761L10.8954 20.655C11.6485 21.0899 12.5757 21.0899 13.3288 20.655L19.008 17.3761C19.7601 16.9421 20.2242 16.1385 20.2242 15.2696V8.7118C20.2242 7.84197 19.7601 7.03927 19.008 6.60435L13.3288 3.32546C12.5757 2.89151 11.6485 2.89151 10.8954 3.32546L5.21621 6.60435C4.46411 7.03927 4 7.84197 4 8.7118Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  ),
  label: "Products",
  path: "/products"
}, {
  icon: () => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M9.77539 14.2656C12.3526 14.2657 14.2284 14.9689 15.4717 16.0898C16.7133 17.2093 17.2334 18.6661 17.2334 19.9814C17.2334 20.5336 16.7855 20.9812 16.2334 20.9814C15.6811 20.9814 15.2334 20.5337 15.2334 19.9814C15.2334 19.1873 14.9205 18.2862 14.1318 17.5752C13.3448 16.8657 11.992 16.2657 9.77539 16.2656C7.55986 16.2656 6.20657 16.8694 5.41895 17.583C4.62891 18.2989 4.31641 19.2057 4.31641 20C4.3162 20.5521 3.86857 21 3.31641 21C2.76425 21 2.31661 20.5521 2.31641 20C2.31641 18.6857 2.83567 17.2246 4.07617 16.1006C5.31915 14.9744 7.19587 14.2656 9.77539 14.2656ZM17.5527 13.9502L17.6543 13.9658L17.9443 14.0312C19.368 14.3845 20.3833 15.1059 21.043 16.0107C21.7338 16.9583 21.9863 18.0402 21.9863 18.9648C21.9863 19.5171 21.5386 19.9648 20.9863 19.9648C20.4342 19.9647 19.9863 19.517 19.9863 18.9648C19.9863 18.3854 19.8257 17.7356 19.4268 17.1885C19.0647 16.692 18.4639 16.22 17.459 15.9717L17.252 15.9248L17.1533 15.8994C16.6694 15.748 16.3695 15.2515 16.4736 14.7441C16.5778 14.2371 17.0486 13.8991 17.5527 13.9502ZM9.77344 3C12.6043 3.00015 14.8984 5.29511 14.8984 8.12598C14.8983 10.9567 12.6042 13.2508 9.77344 13.251C6.94339 13.251 4.6486 10.9566 4.64844 8.12598C4.64844 5.29517 6.94328 3 9.77344 3ZM16.6377 4.66895L16.7393 4.68555L16.9111 4.72461C18.6159 5.15848 19.8873 6.66898 19.9619 8.48828L19.9658 8.6709C19.9594 10.4071 18.864 11.8844 17.3291 12.458C16.8118 12.6512 16.2353 12.3884 16.042 11.8711C15.8489 11.3539 16.1119 10.7784 16.6289 10.585C17.409 10.2934 17.9625 9.54263 17.9658 8.66406L17.958 8.48047C17.8855 7.63032 17.2962 6.92553 16.5039 6.68652L16.3311 6.64258L16.2324 6.61719C15.749 6.46428 15.4509 5.96697 15.5566 5.45996C15.6623 4.95329 16.1338 4.61641 16.6377 4.66895ZM9.77344 5C8.04815 5 6.64844 6.39944 6.64844 8.12598C6.6486 9.85232 8.04825 11.251 9.77344 11.251C11.4996 11.2508 12.8983 9.85208 12.8984 8.12598C12.8984 6.39969 11.4997 5.00015 9.77344 5Z" fill="currentColor"/>
    </svg>
  ),
  label: "Customers",
  path: "/customers"
}, {
  icon: () => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M15.6409 20.9874C18.9967 20.9874 20.9738 19.0094 20.9738 15.6546L21 10.9989C21 7.57609 19.7584 5.86421 16.3948 5.86421H13.7415C13.0682 5.86227 12.4348 5.54554 12.0296 5.00827L11.1737 3.86961C10.7695 3.33137 10.1361 3.01367 9.46278 3.01367H7.58768C4.23193 3.01367 3 4.99079 3 8.34168V15.6546C3 19.0094 4.981 20.9874 8.34452 20.9874H15.6409Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
      <path d="M7.33594 15.6793L8.69709 14.2443C8.93609 13.9927 9.33928 13.9985 9.57051 14.256L10.6965 15.5102C10.9375 15.7784 11.3591 15.7726 11.5923 15.4976L13.9231 12.7452C14.1504 12.4771 14.5594 12.4635 14.8043 12.717L16.6648 14.6456" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
      <path d="M8.62613 10.6249V10.6709M8.81258 10.6348C8.81258 10.7384 8.72855 10.8223 8.62498 10.8223C8.52141 10.8223 8.4375 10.7384 8.4375 10.6348C8.4375 10.5312 8.52141 10.4473 8.62498 10.4473C8.72855 10.4473 8.81258 10.5312 8.81258 10.6348Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  ),
  label: "Content",
  path: "/content"
}, {
  icon: () => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M10.8527 14.964V14.9737M5.17464 13.5456C7.41836 13.9455 10.8861 14.7706 14.7236 16.4237C16.3349 17.1175 18.1339 15.9693 18.1359 14.215L18.1456 6.75025C18.1495 4.0609 16.3524 2.90985 14.7382 3.60068C10.8939 5.24406 7.42128 6.06137 5.17659 6.45446C3.72586 6.70841 3.00292 7.97427 3.00098 9.44738L3 10.5459C2.99806 12.0219 3.72099 13.2868 5.17464 13.5456Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
      <path d="M18.1367 13.3437C19.7558 13.1015 20.9983 11.7062 21.0002 10.019C21.0022 8.3338 19.7636 6.93464 18.1455 6.6875" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
      <path d="M10.8534 14.9741C11.0052 16.0823 11.299 18.2423 11.337 18.7824C11.4031 19.5685 10.9857 20.2321 10.3134 20.488C9.63132 20.7527 8.75952 20.5162 8.32362 19.9003C8.1154 19.6259 7.97334 19.2941 7.86923 18.9624C7.39538 17.4562 6.76098 15.3059 6.29688 13.7617" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
      <path d="M7.37986 6.03516L7.375 9.7588" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  ),
  label: "Marketing",
  path: "/marketing"
}, {
  icon: () => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M16.4453 2.01074C16.967 2.01294 17.4585 2.017 17.8389 2.02344C18.0284 2.02664 18.1951 2.03022 18.3262 2.03516C18.4249 2.03888 18.5837 2.04511 18.7002 2.06543L18.6992 2.06641C20.5647 2.38813 21.9802 4.06865 21.9844 5.96387L22 8.43262C22.0012 9.23663 21.9962 10.0585 21.9746 10.623L21.9473 11.0918C21.8209 12.4624 21.2437 13.642 20.292 14.5996V14.6006C19.2638 15.6345 18.2332 16.6659 17.2021 17.6963L14.1074 20.7852C12.5632 22.3257 10.1813 22.3999 8.57128 20.9531L8.41796 20.8086C7.54181 19.9403 6.66751 19.0697 5.79491 18.1973L3.18261 15.5742C1.58703 13.9643 1.61698 11.4777 3.20605 9.88477L9.33691 3.75391L9.55468 3.54492C10.6615 2.53563 12.0013 2.00997 13.5322 2.00879L16.4453 2.01074ZM13.331 4.01367C12.3927 4.05609 11.5937 4.39113 10.8975 5.02832L10.75 5.16895C8.70546 7.20957 6.66172 9.25139 4.62109 11.2959L4.62206 11.2969C3.79821 12.1227 3.79399 13.3493 4.60351 14.166L7.20898 16.7832C8.07941 17.6535 8.95199 18.5223 9.82616 19.3887L9.98339 19.5303C10.7933 20.1932 11.9191 20.1423 12.6943 19.3691H12.6953L15.7881 16.2822C16.8182 15.2528 17.8474 14.2228 18.874 13.1904L19.1006 12.9443C19.5982 12.3584 19.8834 11.6854 19.9551 10.9082V10.9072L19.9795 10.4883C19.998 9.9746 20.0017 9.2054 20 8.43652L19.9844 5.96875C19.9825 5.04381 19.2671 4.19625 18.3662 4.03711C18.3998 4.04279 18.3827 4.03914 18.251 4.03418C18.1401 4.03 17.9889 4.02558 17.8047 4.02246C17.4374 4.01625 16.9564 4.01293 16.4375 4.01074C15.3998 4.00638 14.2251 4.0083 13.5342 4.00879L13.331 4.01367ZM7.33984 12.6641C7.70595 12.2979 8.28495 12.2754 8.67773 12.5957L8.7539 12.6641L11.3301 15.2402L11.3994 15.3164C11.7196 15.7092 11.6961 16.2882 11.3301 16.6543C10.964 17.0203 10.3849 17.0438 9.99218 16.7236L9.91601 16.6543L7.33984 14.0781L7.27148 14.002C6.95113 13.6092 6.97372 13.0302 7.33984 12.6641ZM15.6621 5.69629C17.1186 5.69076 18.2883 6.83437 18.2978 8.29492V8.2959L18.2851 8.56055C18.1654 9.77778 17.1817 10.7561 15.9687 10.8838L15.7051 10.8984C14.3733 10.9013 13.2492 9.88969 13.1084 8.58496L13.0937 8.31934C13.0877 6.9037 14.2245 5.70017 15.6621 5.69531V5.69629ZM15.5605 7.70801C15.3114 7.76349 15.0925 8.00177 15.0937 8.31055L15.1064 8.4248C15.1635 8.68547 15.407 8.89909 15.7012 8.89844L15.8203 8.88574C16.0518 8.83516 16.2385 8.64358 16.2861 8.4209L16.2978 8.30762C16.2954 7.95931 16.0329 7.69376 15.6689 7.69531H15.668L15.5605 7.70801Z" fill="currentColor"/>
    </svg>
  ),
  label: "Discounts",
  path: "/discounts"
}, {
  icon: () => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M21 15.0944C21 17.8596 19.1552 20.1072 16.4183 20.1004H7.58173C4.84476 20.1072 3 17.8596 3 15.0944V8.91315C3 6.15088 4.84476 3.90039 7.58173 3.90039H16.4183C19.1552 3.90039 21 6.15088 21 8.91315V15.0944Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
      <path d="M20.5864 6.87988L14.1172 12.1402C12.8989 13.1082 11.1722 13.1082 9.95397 12.1402L3.42969 6.87988" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  ),
  label: "Emails",
  path: "/emails"
}];

const settingsItems = [{
  icon: () => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path fillRule="evenodd" clipRule="evenodd" d="M20.8093 7.62386L20.1869 6.54377C19.6603 5.62985 18.4934 5.31456 17.5782 5.83896C17.1426 6.09559 16.6228 6.1684 16.1334 6.04133C15.644 5.91426 15.2253 5.59776 14.9695 5.16162C14.805 4.88439 14.7166 4.56864 14.7132 4.24628C14.7281 3.72947 14.5331 3.22865 14.1727 2.85791C13.8123 2.48718 13.3172 2.27811 12.8002 2.27832H11.5462C11.0397 2.27832 10.554 2.48016 10.1967 2.83919C9.83937 3.19822 9.63986 3.68484 9.6423 4.19136C9.62728 5.23717 8.77517 6.07706 7.72925 6.07695C7.4069 6.0736 7.09114 5.98519 6.81392 5.82065C5.89875 5.29626 4.7318 5.61154 4.20522 6.52546L3.53703 7.62386C3.0111 8.53664 3.32209 9.70285 4.23268 10.2326C4.82459 10.5743 5.18922 11.2058 5.18922 11.8893C5.18922 12.5728 4.82459 13.2043 4.23268 13.5461C3.32324 14.0722 3.01191 15.2356 3.53703 16.1456L4.16861 17.2348C4.41533 17.68 4.82929 18.0085 5.31888 18.1477C5.80847 18.2868 6.33333 18.2251 6.77731 17.9763C7.21377 17.7216 7.73387 17.6518 8.22203 17.7824C8.71018 17.9131 9.12592 18.2333 9.37685 18.6719C9.54138 18.9491 9.62979 19.2649 9.63314 19.5872C9.63314 20.6438 10.4896 21.5003 11.5462 21.5003H12.8002C13.8532 21.5003 14.7082 20.6494 14.7132 19.5964C14.7108 19.0883 14.9115 18.6003 15.2708 18.241C15.6301 17.8817 16.1182 17.6809 16.6263 17.6834C16.9479 17.692 17.2623 17.78 17.5416 17.9396C18.4544 18.4656 19.6206 18.1546 20.1503 17.244L20.8093 16.1456C21.0644 15.7077 21.1345 15.1863 21.0039 14.6966C20.8733 14.207 20.5529 13.7896 20.1137 13.5369C19.6744 13.2842 19.3541 12.8668 19.2235 12.3772C19.0929 11.8875 19.1629 11.3661 19.418 10.9282C19.5839 10.6386 19.8241 10.3984 20.1137 10.2326C21.0188 9.70314 21.3291 8.54374 20.8093 7.63301V7.62386Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
      <path d="M12.1752 14.5252C13.6311 14.5252 14.8114 13.345 14.8114 11.8891C14.8114 10.4332 13.6311 9.25293 12.1752 9.25293C10.7193 9.25293 9.53906 10.4332 9.53906 11.8891C9.53906 13.345 10.7193 14.5252 12.1752 14.5252Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  ),
  label: "Settings",
  path: "/settings"
}, {
  icon: () => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M12 21C16.9709 21 21 16.9699 21 12C21 7.02908 16.9709 3 12 3C7.02908 3 3 7.02908 3 12C3 16.9699 7.02908 21 12 21Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
      <path fillRule="evenodd" clipRule="evenodd" d="M16.0337 11.9997C16.0337 14.2278 14.2269 16.0337 11.9988 16.0337C9.77068 16.0337 7.96484 14.2278 7.96484 11.9997C7.96484 9.77165 9.77068 7.96582 11.9988 7.96582C14.2269 7.96582 16.0337 9.77165 16.0337 11.9997Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
      <path d="M5.79392 18.207L8.8977 15.1032M18.2075 18.207L15.1037 15.1032M8.89675 8.89627L5.79297 5.79346M15.1037 8.89627L18.2075 5.79346" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  ),
  label: "Help center",
  path: "/help"
}];

interface SidebarProps {
  onCollapse?: (collapsed: boolean) => void;
}

export const Sidebar = ({
  onCollapse
}: SidebarProps) => {
  // Initialize state from localStorage or default to false
  const [isCollapsed, setIsCollapsed] = useState(() => {
    // Get the initial state from localStorage
    try {
      const savedState = localStorage.getItem(SIDEBAR_STATE_KEY);
      // Return parsed value or default to false if not set
      return savedState ? JSON.parse(savedState) === true : false;
    } catch (error) {
      // If there's any error in parsing, default to false
      return false;
    }
  });

  // Save to localStorage when state changes
  useEffect(() => {
    try {
      localStorage.setItem(SIDEBAR_STATE_KEY, JSON.stringify(isCollapsed));
    } catch (error) {
      // Handle any localStorage errors silently
      console.error("Error saving sidebar state:", error);
    }
    
    // Notify parent component about the collapse state change
    onCollapse?.(isCollapsed);
  }, [isCollapsed, onCollapse]);

  // Toggle collapsed state
  const handleToggleCollapse = () => {
    setIsCollapsed(prevState => !prevState);
  };

  return <div className={cn(
    "fixed top-16 left-0 h-[calc(100vh-4rem)] transition-all duration-300", 
    isCollapsed ? "w-16" : "w-[300px]"
    )}>
      <div className="flex flex-col h-full py-6 relative bg-[#252626]">
        <CollapseButton isCollapsed={isCollapsed} onClick={handleToggleCollapse} />

        <nav className={`flex flex-col flex-1 ${isCollapsed ? "px-2" : "px-4"}`} >

          <MenuItems items={menuItems} isCollapsed={isCollapsed} />

          <div className={`h-px my-8 bg-[#494a4a] ${isCollapsed ? "mx-4" : "mx-8"}`} />

          <MenuItems items={settingsItems} isCollapsed={isCollapsed} />
        </nav>

        <div className="absolute bottom-8 left-0 right-0">
          {!isCollapsed && <BetaPrompt />}
        </div>
      </div>
    </div>;
};
